version: '3.8'

services:
  # Application service
  app:
    build: 
      context: .
      tags:
        - temitayocharles/hello-k8s:latest
    image: temitayocharles/hello-k8s:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - DB_ENABLED=true
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=k8s_practice
      - DB_USER=k8s_user
      - DB_PASSWORD=secure_password_123
      - DB_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=k8s_practice
      - POSTGRES_USER=k8s_user
      - POSTGRES_PASSWORD=secure_password_123
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U k8s_user -d k8s_practice"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@k8s-practice.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge